package archetype.batch.utils;

import org.springframework.stereotype.Component;

import lombok.extern.slf4j.Slf4j;

import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * @author Ernesto G
 */
@Slf4j
@Component
public class DateUtils {
	
	public static Date stringToDate(String dateStr, String format) throws ParseException {
		Date result = null;
		if (dateStr != null && dateStr !=null && !dateStr.equals("")) {
			DateFormat df = new SimpleDateFormat(format.trim());
			try {
				result = df.parse(dateStr.trim());
			} catch (final ParseException exception) {
				System.out.println("Error al convertir fecha"+ exception);
				throw exception;
			}
		}
		return result;
	}
	
	public static String dateToString(Date date, String format) {
		String result = "";
		if (date != null && format !=null && !format.equals("")) {
			result = new SimpleDateFormat(format.trim()).format(date);
		}
		return result;
	}

	public static String maskString(String strText, int start, int end, char maskChar)
			throws Exception{

		if(strText == null || strText.equals(""))
			return "";

		if(start < 0)
			start = 0;

		if( end > strText.length() )
			end = strText.length();

		if(start > end)
			throw new Exception("End index cannot be greater than start index");

		int maskLength = end - start;

		if(maskLength == 0)
			return strText;

		StringBuilder sbMaskString = new StringBuilder(maskLength);

		for(int i = 0; i < maskLength; i++){
			sbMaskString.append(maskChar);
		}

		return strText.substring(0, start)
				+ sbMaskString.toString()
				+ strText.substring(start + maskLength);
	}

	public static Date initDay(Date date) throws ParseException {
		return stringToDate(dateToString(date, "yyyy-MM-dd") + " 00:00:00","yyyy-MM-dd HH:mm:ss");
	}
	public static Date endDay(Date date) throws ParseException {
		return stringToDate(dateToString(date, "yyyy-MM-dd") + " 23:59:59","yyyy-MM-dd HH:mm:ss");
	}

	public static Timestamp convertStringToTimestamp(String strDate) {
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss");
            Date parsedDate = dateFormat.parse(strDate);
            Timestamp timestamp = new Timestamp(parsedDate.getTime());
            return timestamp;
        } catch (Exception e) {
            log.error("Exception format date :" + e);
            return null;
        }

    }

    public static Timestamp convertStringToTimestamp(String strDate, String format) {
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat(format);
            Date parsedDate = dateFormat.parse(strDate);
            return new Timestamp(parsedDate.getTime());
        } catch (Exception e) {
            log.error("Exception format date :" + e);
            return null;
        }

    }
	
}